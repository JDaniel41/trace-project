{"version":3,"sources":["components/MaskGuidanceCard.js","components/AreaChooser.js","App.js","index.js"],"names":["MaskGuidanceCard","countyData","fips","cdcTransmissionLevel","AreaChooser","stateList","countyList","updateAreaCallback","useState","stateName","setStateName","countiesDisplayed","setCountiesDisplayed","console","log","name","onChange","e","counties","forEach","element","includes","push","slice","updateCountyList","target","value","map","county","App","covidApiResponse","setCovidApiResponse","chosenCountyData","setChosenCountyData","setCountyAndState","countyName","find","result","state","useEffect","axios","get","then","response","data","catch","error","listOfCounties","listOfStates","renderAreaChooser","ReactDOM","render","document","getElementById"],"mappings":"wPAwBeA,MAxBf,YAA2C,IAAfC,EAAc,EAAdA,WASxB,OAAmB,OAAfA,EACO,gDAGH,gCACI,6BAAKA,EAAWC,OAChB,6BAdc,CACtB,MACA,WACA,cACA,OACA,WAU+BD,EAAWE,sBAC1B,sBC2BTC,MA1Cf,YAAqE,IAA9CC,EAA6C,EAA7CA,UAAWC,EAAkC,EAAlCA,WAAYC,EAAsB,EAAtBA,mBAC1C,EAAkCC,mBAAS,MAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAkDF,mBAAS,IAA3D,mBAAOG,EAAP,KAA0BC,EAA1B,KAiBA,OAhBAC,QAAQC,IAAIT,GAiBR,gCACI,wBACIU,KAAK,SACLC,SAAU,SAACC,GAAD,OAlBtB,SAA0BR,GACtBC,EAAaD,GAEb,IAAIS,EAAW,GAEfZ,EAAWa,SAAQ,SAACC,GACZA,EAAQC,SAASZ,IACjBS,EAASI,KAAKF,EAAQG,MAAM,GAAI,OAIxCX,EAAqBM,GAOIM,CAAiBP,EAAEQ,OAAOC,QAF/C,SAIKrB,EAAUsB,KAAI,SAAClB,GAAD,OACX,wBAAQiB,MAAOjB,EAAf,SAA2BA,SAInC,wBACIM,KAAK,WACLC,SAAU,SAACC,GAAD,OAAOV,EAAmBU,EAAEQ,OAAOC,MAAOjB,IAFxD,SAIKE,EAAkBgB,KAAI,SAACC,GAAD,OACnB,wBAAQF,MAAOE,EAAf,SAAwBA,aC6B7BC,MA7Df,WACI,MAAgDrB,mBAAS,MAAzD,mBAAOsB,EAAP,KAAyBC,EAAzB,KACA,EAAgDvB,mBAAS,MAAzD,mBAAOwB,EAAP,KAAyBC,EAAzB,KAEA,SAASC,EAAkBC,EAAY1B,GACnCwB,EACIH,EAAiBM,MACb,SAACC,GAAD,OACIA,EAAOT,SAAWO,GAAcE,EAAOC,QAAU7B,MAuCjE,OAVA8B,qBAAU,WACN1B,QAAQC,IAAI,UACZ0B,IACKC,IACG,wFAEHC,MAAK,SAACC,GAAD,OAAcZ,EAAoBY,EAASC,SAChDC,OAAM,SAACC,GAAD,OAAWjC,QAAQC,IAAIgC,QACnC,IAEqB,MAApBhB,EACO,6CAGH,gCAtCR,WACI,IAAMiB,EAAiBjB,EAAiBH,KACpC,SAACU,GAAD,OAAYA,EAAOT,OAAS,KAAOS,EAAOC,MAAQ,OAElDU,EAAe,GAWnB,OATAlB,EAAiBX,SAAQ,SAACkB,GACjBW,EAAa3B,SAASgB,EAAOC,SAC9BzB,QAAQC,IAAI,WACZkC,EAAa1B,KAAKe,EAAOC,WAIjCzB,QAAQC,IAAIkC,GAGR,cAAC,EAAD,CACI3C,UAAW2C,EACX1C,WAAYyC,EACZxC,mBAAoB2B,IAoBnBe,GACD,8BACI,cAAC,EAAD,CAAkBhD,WAAY+B,UCtDlDkB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a04142ab.chunk.js","sourcesContent":["function MaskGuidanceCard({ countyData }) {\n    const transmissionNames = [\n        \"Low\",\n        \"Moderate\",\n        \"Substantial\",\n        \"High\",\n        \"Unknown\",\n    ];\n\n    if (countyData === null) {\n        return <div>Pick a county</div>;\n    } else {\n        return (\n            <div>\n                <h1>{countyData.fips}</h1>\n                <h1>\n                    {transmissionNames[countyData.cdcTransmissionLevel] +\n                        \" Transmission\"}\n                </h1>\n            </div>\n        );\n    }\n}\n\nexport default MaskGuidanceCard;\n","import { useState } from \"react\";\n\nfunction AreaChooser({ stateList, countyList, updateAreaCallback }) {\n    const [stateName, setStateName] = useState(null);\n    const [countiesDisplayed, setCountiesDisplayed] = useState([]);\n    console.log(stateList);\n\n    function updateCountyList(stateName) {\n        setStateName(stateName);\n\n        let counties = [];\n\n        countyList.forEach((element) => {\n            if (element.includes(stateName)) {\n                counties.push(element.slice(0, -5));\n            }\n        });\n\n        setCountiesDisplayed(counties);\n    }\n\n    return (\n        <div>\n            <select\n                name=\"states\"\n                onChange={(e) => updateCountyList(e.target.value)}\n            >\n                {stateList.map((stateName) => (\n                    <option value={stateName}>{stateName}</option>\n                ))}\n            </select>\n\n            <select\n                name=\"counties\"\n                onChange={(e) => updateAreaCallback(e.target.value, stateName)}\n            >\n                {countiesDisplayed.map((county) => (\n                    <option value={county}>{county}</option>\n                ))}\n            </select>\n        </div>\n    );\n}\n\nexport default AreaChooser;\n","import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport MaskGuidanceCard from \"./components/MaskGuidanceCard\";\nimport AreaChooser from \"./components/AreaChooser\";\n\nfunction App() {\n    const [covidApiResponse, setCovidApiResponse] = useState(null);\n    const [chosenCountyData, setChosenCountyData] = useState(null);\n\n    function setCountyAndState(countyName, stateName) {\n        setChosenCountyData(\n            covidApiResponse.find(\n                (result) =>\n                    result.county === countyName && result.state === stateName\n            )\n        );\n    }\n\n    function renderAreaChooser() {\n        const listOfCounties = covidApiResponse.map(\n            (result) => result.county + \" (\" + result.state + \")\"\n        );\n        let listOfStates = [];\n\n        covidApiResponse.forEach((result) => {\n            if (!listOfStates.includes(result.state)) {\n                console.log(\"PUSHING\");\n                listOfStates.push(result.state);\n            }\n        });\n\n        console.log(listOfStates);\n\n        return (\n            <AreaChooser\n                stateList={listOfStates}\n                countyList={listOfCounties}\n                updateAreaCallback={setCountyAndState}\n            />\n        );\n    }\n\n    useEffect(() => {\n        console.log(\"Effect\");\n        axios\n            .get(\n                \"https://api.covidactnow.org/v2/counties.json?apiKey=c76bf315c59f4583be354544cba8c6a6\"\n            )\n            .then((response) => setCovidApiResponse(response.data))\n            .catch((error) => console.log(error));\n    }, []);\n\n    if (covidApiResponse == null) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <div>\n                {renderAreaChooser()}\n                <div>\n                    <MaskGuidanceCard countyData={chosenCountyData} />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}