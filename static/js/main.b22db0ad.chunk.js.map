{"version":3,"sources":["components/MaskGuidanceCard.js","components/AreaChooser.js","components/VaccinationsCard.js","components/CaseMetrics.js","App.js","index.js"],"names":["MaskGuidanceCard","cdcTransmissionLevel","countyData","className","AreaChooser","stateList","countyList","updateAreaCallback","useState","stateName","setStateName","countiesDisplayed","setCountiesDisplayed","updateCountyList","counties","forEach","element","includes","push","slice","console","log","useEffect","name","onChange","e","target","value","map","county","VaccinationsCard","numeral","metrics","vaccinationsInitiatedRatio","format","vaccinationsCompletedRatio","CaseMetrics","caseDensity","infectionRate","testPositivityRatio","icuCapacityRatio","App","covidApiResponse","setCovidApiResponse","chosenCountyData","setChosenCountyData","setCountyAndState","countyName","find","result","state","axios","get","then","response","data","catch","error","listOfCounties","listOfStates","renderAreaChooser","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b22db0ad.chunk.js","sourcesContent":["function MaskGuidanceCard({ countyData }) {\n    const transmissionNames = [\n        \"Low\",\n        \"Moderate\",\n        \"Substantial\",\n        \"High\",\n        \"Unknown\",\n    ];\n\n    const fontColors = [\n        \"text-green-600\",\n        \"text-blue-700\",\n        \"text-yellow-500\",\n        \"text-red-500\",\n    ];\n\n    function displayMaskGuidance(cdcTransmissionLevel) {\n        if (cdcTransmissionLevel > 1) {\n            return \"You should wear a mask indoors.\";\n        }\n        return \"\";\n    }\n\n    return (\n        <div className=\"p-5\">\n            <div className=\"justify-center w-auto bg-white rounded-lg p-5 shadow-xl\">\n                <h1\n                    className={\n                        fontColors[countyData.cdcTransmissionLevel] +\n                        \" font-bold text-4xl text-center\"\n                    }\n                >\n                    {transmissionNames[countyData.cdcTransmissionLevel] +\n                        \" Transmission\"}\n                </h1>\n                <h2 className=\"text-center font-bold pt-2\">\n                    {displayMaskGuidance(countyData.cdcTransmissionLevel)}\n                </h2>\n            </div>\n        </div>\n    );\n}\n\nexport default MaskGuidanceCard;\n","import { useEffect, useState } from \"react\";\n\nfunction AreaChooser({ stateList, countyList, updateAreaCallback }) {\n    const [stateName, setStateName] = useState(null);\n    const [countiesDisplayed, setCountiesDisplayed] = useState([]);\n    console.log(stateList);\n\n    function updateCountyList(stateName) {\n        setStateName(stateName);\n\n        let counties = [];\n\n        countyList.forEach((element) => {\n            if (element.includes(stateName)) {\n                counties.push(element.slice(0, -5));\n            }\n        });\n\n        setCountiesDisplayed(counties);\n    }\n\n    useEffect(() => {\n        updateCountyList(stateList[0]);\n        updateAreaCallback(countiesDisplayed[0], stateList[0]);\n    }, []);\n\n    useEffect(() => {\n        updateAreaCallback(countiesDisplayed[0], stateName);\n    }, [stateName]);\n\n    return (\n        <div className=\"h-10 justify-center flex\">\n            <select\n                name=\"states\"\n                onChange={(e) => updateCountyList(e.target.value)}\n            >\n                {stateList.map((stateName) => (\n                    <option value={stateName}>{stateName}</option>\n                ))}\n            </select>\n\n            <select\n                name=\"counties\"\n                onChange={(e) => updateAreaCallback(e.target.value, stateName)}\n            >\n                {countiesDisplayed.map((county) => (\n                    <option value={county}>{county}</option>\n                ))}\n            </select>\n        </div>\n    );\n}\n\nexport default AreaChooser;\n","import numeral from \"numeral\";\n\nfunction VaccinationsCard({ countyData }) {\n    console.log(countyData);\n    return (\n        <div>\n            <div className=\"bg-white\">\n                <h1>\n                    {\"1+ Dose: \" +\n                        numeral(\n                            countyData.metrics.vaccinationsInitiatedRatio\n                        ).format(\"0.0%\")}\n                </h1>\n                <h1>\n                    {\"Vaccine Series Completed: \" +\n                        numeral(\n                            countyData.metrics.vaccinationsCompletedRatio\n                        ).format(\"0.0%\")}\n                </h1>\n            </div>\n        </div>\n    );\n}\n\nexport default VaccinationsCard;\n","import numeral from \"numeral\";\n\nfunction CaseMetrics({ countyData }) {\n    return (\n        <div>\n            <div>\n                <h1>\n                    {\"Case Density: \" +\n                        numeral(countyData.metrics.caseDensity).format(\"0,0\") +\n                        \" per 100k population\"}\n                </h1>\n                <h1>\n                    {\"Estimated Infection Rate: \" +\n                        countyData.metrics.infectionRate}\n                </h1>\n                <h1>\n                    {\"Test Positivity Ratio: \" +\n                        numeral(countyData.metrics.testPositivityRatio).format(\n                            \"0%\"\n                        )}\n                </h1>\n                <h1>\n                    {\"ICU Capacity Used: \" +\n                        numeral(countyData.metrics.icuCapacityRatio).format(\n                            \"0%\"\n                        )}\n                </h1>\n            </div>\n        </div>\n    );\n}\n\nexport default CaseMetrics;\n","import axios from \"axios\";\nimport { useState, useEffect } from \"react\";\nimport MaskGuidanceCard from \"./components/MaskGuidanceCard\";\nimport AreaChooser from \"./components/AreaChooser\";\nimport VaccinationsCard from \"./components/VaccinationsCard\";\nimport CaseMetrics from \"./components/CaseMetrics\";\n\nfunction App() {\n    const [covidApiResponse, setCovidApiResponse] = useState(null);\n    const [chosenCountyData, setChosenCountyData] = useState(null);\n\n    function setCountyAndState(countyName, stateName) {\n        setChosenCountyData(\n            covidApiResponse.find(\n                (result) =>\n                    result.county === countyName && result.state === stateName\n            )\n        );\n    }\n\n    function renderAreaChooser() {\n        const listOfCounties = covidApiResponse.map(\n            (result) => result.county + \" (\" + result.state + \")\"\n        );\n        let listOfStates = [];\n\n        covidApiResponse.forEach((result) => {\n            if (!listOfStates.includes(result.state)) {\n                console.log(\"PUSHING\");\n                listOfStates.push(result.state);\n            }\n        });\n\n        console.log(listOfStates);\n\n        return (\n            <AreaChooser\n                stateList={listOfStates}\n                countyList={listOfCounties}\n                updateAreaCallback={setCountyAndState}\n            />\n        );\n    }\n\n    function renderCards() {\n        if (!chosenCountyData) return <div></div>;\n\n        return (\n            <div className=\"flex justify-center\">\n                <div className=\"w-1/4 \">\n                    <MaskGuidanceCard countyData={chosenCountyData} />\n                    <VaccinationsCard countyData={chosenCountyData} />\n                    <CaseMetrics countyData={chosenCountyData} />\n                </div>\n            </div>\n        );\n    }\n\n    useEffect(() => {\n        console.log(\"Effect\");\n        axios\n            .get(\n                \"https://api.covidactnow.org/v2/counties.json?apiKey=c76bf315c59f4583be354544cba8c6a6\"\n            )\n            .then((response) => setCovidApiResponse(response.data))\n            .catch((error) => console.log(error));\n    }, []);\n\n    if (covidApiResponse == null) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <div className=\"bg-gray-100 h-screen\">\n                {renderAreaChooser()}\n                {renderCards()}\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}